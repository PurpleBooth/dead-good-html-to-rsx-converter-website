name: Test
on:
  push:
    branches:
      - "*"
  pull_request:
  workflow_dispatch:

jobs:
  rust-checks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@main
      - run: curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
      - run: rustup target add wasm32-unknown-unknown
      - name: Install cargo-binstall
        uses: cargo-bins/cargo-binstall@v1.6.0
      - run: cargo binstall --no-confirm dioxus-cli
      - run: cargo binstall --no-confirm cargo-shuttle
      - uses: extractions/setup-just@v1
      - run: just lint
      - run: just test
  release:
    if: github.ref == 'refs/heads/main'
    permissions:
      contents: write
    needs:
      - rust-checks
    outputs:
      version_bump: ${{ steps.current_version.outputs.current_version != steps.previous_version.outputs.previous_version }}
      current_version: ${{ steps.current_version.outputs.current_version }}
      previous_version: ${{ steps.previous_version.outputs.previous_version }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@main
        with:
          fetch-depth: 0
      - uses: extractions/setup-just@v1
      - name: Get tags
        run: git fetch --tags origin
      - run: curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
      - run: rustup target add wasm32-unknown-unknown
      - name: Install cargo-binstall
        uses: cargo-bins/cargo-binstall@v1.6.0
      - shell: bash
        run: cargo binstall --no-confirm cargo-edit
      - shell: bash
        run: cargo binstall --no-confirm cocogitto
      - shell: bash
        run: cargo binstall --no-confirm dioxus-cli
      - shell: bash
        run: cargo binstall --no-confirm cargo-shuttle
      - shell: bash
        env:
          SHUTTLE_API_KEY: ${{ secrets.SHUTTLE_API_KEY }}
        run: cargo shuttle login --api-key "$SHUTTLE_API_KEY"
      - id: previous_version
        run: |
          cog get-version | tee .version
          echo "previous_version=$( cat .version )"  >> "$GITHUB_OUTPUT"
          rm .version
        shell: bash
      - name: Semver release
        id: release
        run: |
          git config --global user.name "cog-bot"
          git config --global user.email "cog@example.com"
          cog bump --auto
      - id: current_version
        run: |
          cog get-version | tee .version
          echo "current_version=$( cat .version )"  >> "$GITHUB_OUTPUT"
          rm .version
        shell: bash
